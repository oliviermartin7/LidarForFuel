% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ffuelmetrics.R
\name{ffuelmetrics}
\alias{ffuelmetrics}
\title{Fuel metrics LiDAR}
\usage{
ffuelmetrics(profile_table, threshold, H_PAI = 0)
}
\arguments{
\item{profile_table}{A table (e.g., data.frame or data.table) with at least two columns: H (height of the strata) and BD (bulk density in kg/m³). If BD is not available provide three more columns PAD (plant area density in (m²/m3) LMA (leaf mass area in g/m2. use value the average value 141 if unknown) and WD (wood density in kg/m3 use the average value 591 if unknown)}

\item{threshold}{Numeric or character. Default is 0.012. A critical bulk density threshold used to identify different strata limits such as midstorey height, canopy base, and canopy top. Can be either: Numeric: a bulk density value (in kg/m³) or Character: a percentage of the maximum CBD value (cf example).}

\item{H_PAI}{Numeric. Height from which PAI and VCI_PAD is estimated. Default is 0 (means from the ground to the top).}
}
\value{
a list of two elements: 1) a named vector with all fuel metrics 2) a data.table with the PAD and CBD profile value plus additional columns if BD not provided (i.e BD_rollmean, LMA, WD, WMA FMA if BD not provided) (three columns: H, PAD and CBD),
}
\description{
Computes fuel metrics from a bulk density profile. Produces similar outputs to the fCBDprofile_fuelmetrics function. This function is intended for use with bulk density profiles derived from field data, MLS, TLS, or model outputs.
}
\details{
In addition to fuel metrics, this function also estimates structural metrics such as total height, plant area index above 1 meter (PAI_tot), and vertical complexity index (VCI) based on the plant area density profile.
}
\examples{
\donttest{
path2profile <- system.file("extdata","BD_profile.txt", package="lidarforfuel")

# read a table
Profile <- data.table::fread(path2profile)

# Run the function with a relative threshold
Fuel_metrics <- ffuelmetrics(profile_table=Profile,threshold="10\%")
# Run the function with an absolute threshold
Fuel_metrics <- ffuelmetrics(profile_table=Profile,threshold=0.02)

}
}
