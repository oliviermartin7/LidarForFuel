% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fCBDprofile_fuelmetrics.R
\name{fCBDprofile_fuelmetrics}
\alias{fCBDprofile_fuelmetrics}
\title{Fuel metrics LiDAR}
\usage{
fCBDprofile_fuelmetrics(
  datatype = "Pixel",
  X,
  Y,
  Z,
  Zref,
  Easting,
  Northing,
  Elevation,
  LMA,
  gpstime,
  threshold = 0.012,
  scanning_angle = TRUE,
  WD,
  limit_N_points = 400,
  limit_flightheight = 800,
  omega = 1,
  d = 0.5,
  G = 0.5
)
}
\arguments{
\item{datatype}{character or las. Default is "Pixel". Either "Pixel" if using with pixel_metric function to map fuel metrics. or a .las file if a plot point cloud only has to be computed. In the latter case no need to  Only the output change (see return). The function will be modified so it can take directly a las file when a plot only is used.}

\item{X, Y, Z, Zref}{numeric, coordinates of a point cloud (Z being the normalized Z coordinate and Zref the original one)}

\item{Easting, Northing, Elevation}{numeric, coordinates of the plane associated to each point}

\item{LMA}{numeric. Leaf mass area in g.cmÂ² associated to each point or a generic value}

\item{gpstime}{gpstime of the point cloud. Only used to retrieve date of scanning}

\item{threshold}{numeric or character. Default = 0.012. Bulk density critical threshold  used to discriminate strata, get CBH.etc. Either numeric : a bulk density value (in kg/m3) or character: a percentage of maximum CBD value.}

\item{scanning_angle}{logical. Default = TRUE. Use the scanning angle computed from the trajectories to estimate cos(theta). If false: cos(theta) = 1}

\item{WD}{numeric. wood density associated to each point or a generic value}

\item{limit_N_points}{numeric. Default = 400. minimum number of point in the pixel/plot for computing profiles & metrics.}

\item{limit_flightheight}{numeric. Default = 800. flight height above canopy in m. If the flight height is lower than limit_flyheight bulk density profile is not computed.  This limit serves as a safeguard to eliminate cases where the trajectory reconstruction would be outlier.}

\item{omega}{numeric. clumping factor. Default is 1. 1 mean no clumping assuming a homogeneous distribution of vegetation element}

\item{d}{numeric. default = 1. depth of the strata in meter to compute the profile}

\item{G}{numeric. Default = 0.5. Leaf projection ratio.}
}
\value{
If datatype = "Pixel" a vector containing all the fuel metrics and the CBD value for each strata. If datatype is a las a list of two elements: 1) a vector with all fuel metrics 2) a data.table with the PAD and CBD profile value (three columns: H, PAD and CBD),
}
\description{
Function to compute PAD and CBD profiles from ALS point cloud and obtain fuel metrics from it. T
}
\details{
This function can be used with pixel_metrics lidR function to generate maps (raster). Note that not only fuel metrics are quantified but also: Height, plant area index above one meter (PAI_tot), vertical complexity index (VCI) based on plant area density profile or based on point cloud (lidR method). Note that the bulk density values of the profile are given in the raster using one layer per strata (with a depth = d) starting from layer 23 (i.e Band 23). Note also that in case of using the plot approach (i.e datatype = las) the profile  is given as a data.table in the second element of the list.
}
\examples{
\donttest{
path2laz <- system.file("extdata","M30_FontBlanche_pretreated.laz", package="lidarforfuel")

# read a pretreated las 
M30_FontBlanche_pretreated <- lidR::readLAS(path2laz)

# Run the function on a las file and get a vector of the metrics and PAD and CDB profile 
Fuel_metrics <- fCBDprofile_fuelmetrics(datatype=M30_FontBlanche_pretreated,WD=500)

# Run with pixel_metrics and get a raster
M30_FontBlanche_Raster <- lidR::pixel_metrics(M30_FontBlanche_pretreated,~fCBDprofile_fuelmetrics(X=X,Y=Y,Z=Z,Zref = Zref,gpstime =gpstime, Easting = Easting ,Northing = Northing,Elevation = Elevation ,LMA = LMA,threshold = 0.016,WD = 500 ,limit_N_points = 400,datatype = "Pixel",omega = 0.77,d=0.5,G = 0.5),res=10)

# Replace -1 in cells not computed  by NA
M30_FontBlanche_Raster <- terra::subst(M30_FontBlanche_Raster,-1,NA)

# Plot a few metrics
plot(M30_FontBlanche_Raster[[5:20]])

}
}
